<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rabbit.ssm.dao.LifePayBillDAO">
  <resultMap id="BaseResultMap" type="com.rabbit.ssm.domain.model.LifePayBillDO">
    <id column="bill_id" jdbcType="INTEGER" property="billId" />
    <result column="last_modify_date" jdbcType="TIMESTAMP" property="lastModifyDate" />
    <result column="power_bill" jdbcType="DOUBLE" property="powerBill" />
    <result column="power_rate" jdbcType="DOUBLE" property="powerRate" />
    <result column="record_month" jdbcType="INTEGER" property="recordMonth" />
    <result column="water_bill" jdbcType="DOUBLE" property="waterBill" />
    <result column="water_rate" jdbcType="DOUBLE" property="waterRate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bill_id, last_modify_date, power_bill, power_rate, record_month, water_bill, water_rate
  </sql>
  <select id="selectByExample" parameterType="com.rabbit.ssm.domain.model.LifePayBillDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lifepay_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lifepay_bill
    where bill_id = #{billId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lifepay_bill
    where bill_id = #{billId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rabbit.ssm.domain.model.LifePayBillDOExample">
    delete from lifepay_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rabbit.ssm.domain.model.LifePayBillDO">
    <selectKey keyProperty="billId" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into lifepay_bill (bill_id, last_modify_date, power_bill, 
      power_rate, record_month, water_bill, 
      water_rate)
    values (#{billId,jdbcType=INTEGER}, #{lastModifyDate,jdbcType=TIMESTAMP}, #{powerBill,jdbcType=DOUBLE}, 
      #{powerRate,jdbcType=DOUBLE}, #{recordMonth,jdbcType=INTEGER}, #{waterBill,jdbcType=DOUBLE}, 
      #{waterRate,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.rabbit.ssm.domain.model.LifePayBillDO">
    <selectKey keyProperty="billId" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into lifepay_bill
    <trim prefix="(" suffix=")" suffixOverrides=",">
      bill_id,
      <if test="lastModifyDate != null">
        last_modify_date,
      </if>
      <if test="powerBill != null">
        power_bill,
      </if>
      <if test="powerRate != null">
        power_rate,
      </if>
      <if test="recordMonth != null">
        record_month,
      </if>
      <if test="waterBill != null">
        water_bill,
      </if>
      <if test="waterRate != null">
        water_rate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{billId,jdbcType=INTEGER},
      <if test="lastModifyDate != null">
        #{lastModifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="powerBill != null">
        #{powerBill,jdbcType=DOUBLE},
      </if>
      <if test="powerRate != null">
        #{powerRate,jdbcType=DOUBLE},
      </if>
      <if test="recordMonth != null">
        #{recordMonth,jdbcType=INTEGER},
      </if>
      <if test="waterBill != null">
        #{waterBill,jdbcType=DOUBLE},
      </if>
      <if test="waterRate != null">
        #{waterRate,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rabbit.ssm.domain.model.LifePayBillDOExample" resultType="java.lang.Long">
    select count(*) from lifepay_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lifepay_bill
    <set>
      <if test="record.billId != null">
        bill_id = #{record.billId,jdbcType=INTEGER},
      </if>
      <if test="record.lastModifyDate != null">
        last_modify_date = #{record.lastModifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.powerBill != null">
        power_bill = #{record.powerBill,jdbcType=DOUBLE},
      </if>
      <if test="record.powerRate != null">
        power_rate = #{record.powerRate,jdbcType=DOUBLE},
      </if>
      <if test="record.recordMonth != null">
        record_month = #{record.recordMonth,jdbcType=INTEGER},
      </if>
      <if test="record.waterBill != null">
        water_bill = #{record.waterBill,jdbcType=DOUBLE},
      </if>
      <if test="record.waterRate != null">
        water_rate = #{record.waterRate,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lifepay_bill
    set bill_id = #{record.billId,jdbcType=INTEGER},
      last_modify_date = #{record.lastModifyDate,jdbcType=TIMESTAMP},
      power_bill = #{record.powerBill,jdbcType=DOUBLE},
      power_rate = #{record.powerRate,jdbcType=DOUBLE},
      record_month = #{record.recordMonth,jdbcType=INTEGER},
      water_bill = #{record.waterBill,jdbcType=DOUBLE},
      water_rate = #{record.waterRate,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rabbit.ssm.domain.model.LifePayBillDO">
    update lifepay_bill
    <set>
      <if test="lastModifyDate != null">
        last_modify_date = #{lastModifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="powerBill != null">
        power_bill = #{powerBill,jdbcType=DOUBLE},
      </if>
      <if test="powerRate != null">
        power_rate = #{powerRate,jdbcType=DOUBLE},
      </if>
      <if test="recordMonth != null">
        record_month = #{recordMonth,jdbcType=INTEGER},
      </if>
      <if test="waterBill != null">
        water_bill = #{waterBill,jdbcType=DOUBLE},
      </if>
      <if test="waterRate != null">
        water_rate = #{waterRate,jdbcType=DOUBLE},
      </if>
    </set>
    where bill_id = #{billId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rabbit.ssm.domain.model.LifePayBillDO">
    update lifepay_bill
    set last_modify_date = #{lastModifyDate,jdbcType=TIMESTAMP},
      power_bill = #{powerBill,jdbcType=DOUBLE},
      power_rate = #{powerRate,jdbcType=DOUBLE},
      record_month = #{recordMonth,jdbcType=INTEGER},
      water_bill = #{waterBill,jdbcType=DOUBLE},
      water_rate = #{waterRate,jdbcType=DOUBLE}
    where bill_id = #{billId,jdbcType=INTEGER}
  </update>
</mapper>